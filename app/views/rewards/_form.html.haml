= form_for(@reward, :remote => true) do |f|
  - if @reward.errors.any?
    #error_explanation
      %h2<
        =pluralize(@reward.errors.count, "error")
        prohibited this reward from being saved:

      %ul
      -@reward.errors.full_messages.each do |msg|
        %li= msg
  -if @rewardID != 'new' and user_is_dd?
    .deleteRewardLink
      = link_to '[X]', {:action=>'destroy', :id=>@reward}, :confirm=>"Are you sure you want to delete this premium?", :method=>:delete, :remote => true
  .field
    = f.label :item
    - id = @selectedItem.nil? ? 0 : @selectedItem.id
    = f.select( :item, options_for_select(Item.for_select(@total_donation, @selectedItem), id), {}, :class => "chzn-select" )
  - if user_is_dd?
    .flexcontainer
      .field.centered.flex1
        %abbr{:title => "Premia Sent?"}
          = f.label :premia_sent, "&nbsp;".html_safe, :class => "fa fa-lg fa-gift"
        = f.check_box :premia_sent
      .field.centered.flex1
        %abbr{:title => "Taxed?"}
          =f.label :taxed, "TAX"
        = f.check_box :taxed
  - else
    = f.hidden_field :premia_sent, value: false
  .field
    = f.label :comment, "Special Instructions"
    = f.text_area :comment, :rows => 3
  = f.hidden_field :pledger_id
  %div{:style => "height: 6px;"}
  .actions
    = f.submit 'Submit', data: { disable_with: 'Saving...' }
    = button_tag "Cancel", :type => "button", :id => "rewardFormCancelButton", :data => { :id => @rewardID }
